# check the working directory
getwd()
setwd("C:/Users/User/Desktop/Game-sales")
df <- read.csv("game_sales.csv", header = TRUE,sep = ",")
# check the working directory
getwd()
df <- read.csv("game_sales.csv", header = TRUE,sep = ",")
# check the working directory
getwd()
df <- read.csv("game_sales.csv", header = TRUE,sep = ",")
df
max(df$sales)
mean(df$critic_score)
max(df$sales)
new_df <- df
new_df$genre_mean <- ave(df$sales,df$genre)
new_df
max(new_df$genre_mean)
new_df <- df
new_df$genre_mean <- ave(df$sales,df$genre)
new_df
table(df$genre)
#get the value counts for the genre
table(df$genre)
max(new_df$genre_mean) #Get the max average
arrange(desc(genre_mean))
# get the genre with the highest mean
max_sales <- new_df[new_df$genre_mean == max(new_df$genre_mean)]
max_mean_sales <-max(new_df$genre_mean) #Get the max average
max_mean_sales <-max(new_df$genre_mean) #Get the max average
max_mean_sales
# get the genre with the highest mean
group_means <- df %>%
group_by(Group) %>%
summarize(Mean = mean(Value, na.rm = TRUE))
# get the genre with the highest mean
group_means <- df
group_by(Group)
new_df[new_df$genre_mean == max_mean_sales]
max_genre <- new_df[new_df$genre_mean == max_mean_sales]
library(tidyverse)
max_genre <- new_df$genre_mean == max_mean_sales
max_genre
max_genre <- new_df$genre_mean == max_mean_sales
Identify_rows <- new_df[max_genre,]
View(Identify_rows)
View(Identify_rows)
max_genre <- new_df$genre_mean == max_mean_sales
Identify_rows <- new_df[max_genre,]
Identify_rows
#get the value counts for the developer
table(df$developer)
df2 <- df # duplicate the dataframe
#filter the rows for games developed by EA
Developed_by_EA <- df2$developer == "EA"
df2 <- df # duplicate the dataframe
#filter the rows for games developed by EA
Developed_by_EA <- df2$developer == "EA"
Rows <- df2[Developed_by_EA]
df2 <- df # duplicate the dataframe
#filter the rows for games developed by EA
Developed_by_EA <- df2$developer == "EA"
Rows <- df2[Developed_by_EA,]
rows
df2 <- df # duplicate the dataframe
#filter the rows for games developed by EA
Developed_by_EA <- df2$developer == "EA"
Rows <- df2[Developed_by_EA,]
Rows
#get the mean critic score
mean(Rows$critic_score)
df3 <- df #Duplicate the dataframe
Above_2000 <- df3$year_of_release >= 2000
Above_2000
df3$modern <- Above_2000
df3$modern <- Above_2000
df3
df3$modern <- Above_2000
df3$modern <- factor(df3$modern, levels = c("TRUE","FALSE"), labels = c("yes","no")
df3$modern <- Above_2000
df3$modern <- factor(df3$modern, levels = c("TRUE","FALSE"), labels = c("yes","no"))
df3$modern <- Above_2000
df3$modern <- factor(df3$modern, levels = c("TRUE","FALSE"), labels = c("yes","no"))
df3
df4 <- df #Duplicate the dataframe
table(df4$developer)
Developed_by_Other <- df4$developer == "other"
Developed_by_Other <- df4$developer == "other"
Developed_by_Other
table(df4$publisher)
Published_by_Other <- df4$publisher == "other"
Published_by_Other
Published_by_Other <- df4$publisher == "other"
null_rows <- df4[Published_by_Other]
null_rows
Published_by_Other <- df4$publisher == "Other"
null_rows <- df4[Published_by_Other]
Published_by_Other <- df4$publisher == "Other"
Published_by_Other
Published_by_Other <- df4$publisher == "Other"
null_rows <- df4[Published_by_Other]
Published_by_Other <- df4$publisher == "Other"
null_rows <- df4[Published_by_Other,]
null_rows
df4[df4$publisher == "other"] <- NA
df4[df4$publisher == "other"] <- NA
df4
df4[df4$publisher == "other"] <- NA
table(df4$publisher)
df4[df4$publisher == "Other"] <- NA
df4[df4$publisher == "Other",] <- NA
table(df4$publisher)
#I had created a variable with rows where year of release is greater than 2000
Above_2000
#I had created a vector for rows where year of release is greater than 2000
df5<- df[Above_2000,]
#I had created a vector for rows where year of release is greater than 2000
df5<- df[Above_2000,]
df5
average_user_score_high_critic <- mean(df5$user_score[df$critic_score >= 80])
average_user_score_high_critic <- mean(df5$user_score[df$critic_score >= 80])
average_user_score_high_critic
average_user_score_high_critic <- mean(df5$user_score[df5$critic_score >= 80])
average_user_score_high_critic
average_user_score_low_critic <- mean(df5$user_score[df5$critic_score < 80])
average_user_score_low_critic
table(df$rating)
library(dplyr)
# Group the data by rating and calculate the mode (most common genre)
mode_genre_by_rating <- df %>%
group_by(rating) %>%
summarize(mode_genre = names(sort(table(genre), decreasing = TRUE)[1]))
# Print the result
print(mode_genre_by_rating)
table(df$genre)
library(dplyr)
# Group the data by genre and calculate the mean critic score
mean_critic_by_genre <- df %>%
group_by(genre) %>%
summarize(mean_critic = names(sort(mean(df$critic_score), decreasing = TRUE)[1]))
library(dplyr)
# Group the data by genre and calculate the mean critic score
mean_critic_by_genre <- df %>%
group_by(genre) %>%
summarize(mean_critic = names(sort(mean(df$critic_score), decreasing = TRUE)[1]))
print(mean_critic_by_genre)
df6 <- df[df$genre ==-"Action","Fighting","Misc","Racing","Shooter","Sports"]
df6 <- df[df$genre == "Action","Fighting","Misc","Racing","Shooter","Sports"]
df6 <- df[df$genre == "Action","Fighting","Misc","Racing","Shooter","Sports",]
df6 <- df[df$genre == c["Action","Fighting","Misc","Racing","Shooter","Sports",]]
df6 <- df[df$genre == c("Action","Fighting","Misc","Racing","Shooter","Sports",)]
#sort the value counts
mode_genre <- sort(table(genre))
#sort the value counts
mode_genre <- sort(table(df$genre))
#sort the value counts
mode_genre <- sort(table(df$genre))
mode_genre
#sort the value counts
mode_genre <- sort(table(df$genre)decreasing = TRUE)
#sort the value counts
mode_genre <- sort(table(df$genre), decreasing = TRUE)
mode_genre
Valid_genre <- mode_genre>= 100
Valid_genre <- mode_genre>= 100
df6 <- df[Valid_genre,]
library(dplyr)
# Group the data by genre and calculate the mean critic score
mean_critic_by_genre <- df6 %>%
group_by(genre) %>%
summarize(mean_critic = names(sort(mean(df6$critic_score), decreasing = TRUE)[1]))
print(mean_critic_by_genre)
Valid_genre <- mode_genre>= 100
df6 <- df[Valid_genre,]
df6
View(df6)
View(df5)
View(df6)
